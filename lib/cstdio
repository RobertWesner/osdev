#ifndef _cstdio_
#define _cstdio_

#include "../src/text.cpp"

void putchar(char c) {
   	text_out::printc(c);
}

void puts(char* string) {
   	text_out::print(string);
}

void printf(const char *format, ...) {
    __builtin_va_list args;
    __builtin_va_start(args, format);

    bool formatted = false;
   	while (*format) {
        if (*format == '%') {
            switch (*(++format)) {
                // TODO: length sub-specifiers...
				case 'd':
				case 'i':
                    text_out::print_dec_signed(__builtin_va_arg(args, int));

                    break;
				case 'u':
                    text_out::print_dec_unsigned(__builtin_va_arg(args, unsigned int));

                    break;
				case 'o':
                    text_out::print_oct(__builtin_va_arg(args, unsigned int));

                    break;
				case 'x':
                    text_out::print_hex(__builtin_va_arg(args, unsigned int), false);

                    break;
				case 'X':
                    text_out::print_hex(__builtin_va_arg(args, unsigned int), true);

                    break;
                case 'f':
                case 'F':
                    // TODO: Decimal floating point
                case 'e':
                    // TODO: Scientific notation (mantissa/exponent), lowercase
                case 'E':
                    // TODO: Scientific notation (mantissa/exponent), uppercase
                case 'g':
                    // TODO: Use the shortest representation: %e or %f
                case 'G':
                    // TODO: Use the shortest representation: %E or %F
                case 'a':
                    // TODO: Hexadecimal floating point, lowercase
                case 'A':
                    // TODO: Hexadecimal floating point, uppercase
                    break;
                case 'c':
            	    text_out::printc(__builtin_va_arg(args, unsigned int));

                    break;
                case 's':
            	    text_out::print(__builtin_va_arg(args, char *));

                    break;
                case 'p':
                    text_out::print_hex(__builtin_va_arg(args, unsigned int), false);

                    break;
                case 'n':
                    /**
                     * TODO
                     *  Nothing printed.
                     *  The corresponding argument must be a pointer to a signed int.
                     *  The number of characters written so far is stored in the pointed location.
                     */

                    break;
                case '%':
            		text_out::printc('%');
            }
        } else {
            text_out::printc(*format);
        }

        format++;
    }
}

#endif
